<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- Mapper를 사용하는 Repository의 전체 경로를 적어줘야함. -->
<mapper namespace="Review">
         <insert id="ReviewWrite"
                 parameterType="com.green.shopping.vo.ReviewVo">
           INSERT INTO REVIEW_TB( ID, USER_ID, PRODUCT_NUM, TITLE, CONT, STAR)
           VALUES ( REPLY_NUMBER.NEXTVAL, #{user_id}, #{product_num},#{title}, #{cont}, #{star})

         </insert>

    <insert id="QnAWrite"
            parameterType="HashMap">
        INSERT INTO QNA_TB( ID, USER_ID, PRODUCT_NUM, CONT, PRODUCT_NAME)
        VALUES ( REPLY_NUMBER.NEXTVAL, #{user_id}, #{product_num},#{cont}, #{product_name})

    </insert>

    <select id="QnAList"
            resultType="com.green.shopping.vo.QnAVo">
        SELECT ID,USER_ID,QNATYPE,CONT,PRODUCT_NUM,PRODUCT_NAME,TO_CHAR(REGDATE + 9/24, 'yyyy-mm-dd hh24:mi:ss') AS REGDATE,CHILD_ID
        FROM    QnA_TB
        WHERE PRODUCT_NUM = #{page}
        ORDER BY ID DESC
    </select>

    <select id="QnAReply"
            resultType="com.green.shopping.vo.QnAVo">
        SELECT ID,USER_ID,CONT,TO_CHAR(REGDATE + 9/24, 'yyyy-mm-dd hh24:mi:ss') AS REGDATE
        FROM QnA_TB
        WHERE ID = #{id} and PRODUCT_NUM = #{page}

    </select>

    <select id="QnareplyList"
             resultType="com.green.shopping.vo.QnAVo">

        SELECT ID,USER_ID,QNATYPE,CONT,PRODUCT_NUM,PRODUCT_NAME,TO_CHAR(REGDATE + 9/24, 'yyyy-mm-dd hh24:mi:ss') AS REGDATE,CHILD_ID
        FROM    QnA_TB
        WHERE QNATYPE = '1'
    </select>

    <insert id="QnAreplyWrite"
            parameterType="HashMap">
        INSERT INTO QNA_TB( ID, USER_ID, PRODUCT_NUM, CONT, PRODUCT_NAME,CHILD_ID, QNATYPE)
        VALUES ( REPLY_NUMBER.NEXTVAL, #{user_id}, #{product_num},#{cont}, #{product_name},#{child_id}, #{qnatype})
    </insert>

    <select id="reviewList"
            resultType="com.green.shopping.vo.ReviewVo">
        SELECT ID,USER_ID,TITLE,CONT,STAR,PRODUCT_NUM,TO_CHAR(REGDATE + 9/24, 'yyyy-mm-dd hh24:mi:ss') AS REGDATE
        FROM REVIEW_TB
        WHERE PRODUCT_NUM = #{page}
        ORDER BY ID DESC
    </select>

    <delete id="reviewDelete">
    Delete
    FROM REVIEW_TB
    WHERE ID = #{id} and PRODUCT_NUM= #{product_num}

    </delete>
    <select id="ReviewOneSelect"
            resultType="com.green.shopping.vo.ReviewVo">
    SELECT ID,USER_ID,TITLE,CONT,STAR,PRODUCT_NUM,TO_CHAR(REGDATE + 9/24, 'yyyy-mm-dd hh24:mi:ss') AS REGDATE
    FROM REVIEW_TB
    WHERE ID = #{id} and PRODUCT_NUM = #{page}
    </select>

    <update id = "reviewUpdate">
        UPDATE REVIEW_TB SET
        CONT = #{cont},
        TITLE = #{title},
        STAR = #{star},
        REGDATE = SYSDATE

        WHERE ID = #{id} and PRODUCT_NUM = #{page}

    </update>

    <update id="QuestionDelete">
        UPDATE QNA_TB SET
        CONT = '삭제된 문의입니다.'

        WHERE ID = #{id} and PRODUCT_NUM = #{product_num}
    </update>

    <delete id="QuestionHardDelete">
        DELETE
        FROM QNA_TB
        WHERE ID = #{id} and PRODUCT_NUM = #{product_num}
    </delete>

    <delete id="answerDelete">
        Delete
        FROM QNA_TB
        WHERE ID = #{id} and PRODUCT_NUM= #{product_num}

    </delete>

    <select id="QnAanswerupdate"
           resultType="com.green.shopping.vo.QnAVo">
        SELECT CONT
        FROM QNA_TB
        WHERE ID = #{id} AND PRODUCT_NUM = #{product_num}

    </select>

    <update id="QuestionUpdate">
        UPDATE QNA_TB SET
        CONT = #{cont}
        WHERE ID = #{id} and PRODUCT_NUM = #{product_num}

    </update>

    <update id="answerUpdate">
        UPDATE QNA_TB SET
        CONT = #{cont}
        WHERE ID = #{id} and PRODUCT_NUM = #{product_num}
    </update>

    <select id="getProductName"
            resultType="String">
        SELECT TITLE
        FROM PRODUCT_TB
        WHERE id = #{page}

    </select>

    <select id="getmarketName" resultType="String">
        SELECT NAME
        FROM MARKET_TB
        WHERE SELLERID = #{user_id}

    </select>

    <select id="getmarketNamebyproductid" resultType="String">
        SELECT MARKET_NAME
        FROM PRODUCT_TB
        WHERE ID = #{page}

    </select>

    <select id="getReviewCheck" resultType="HashMap">
    SELECT ID
    FROM PURCHASELIST_TB
    WHERE USER_ID = #{user_id} and PRODUCTID = #{page}
    </select>

    <select id="getReviewCheck2" resultType="int">
        SELECT CASE WHEN COUNT(*)>=1 THEN 1 ELSE 0 END AS ISEXISTED
        FROM PURCHASELIST_TB
        WHERE USER_ID = #{user_id} AND PRODUCTID = #{page}
    </select>



</mapper>


